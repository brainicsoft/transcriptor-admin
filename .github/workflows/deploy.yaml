name: Transcriptor-admin  CI/CD Pipeline
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "22.14.0"
      - name: ðŸ”¨ Create .env file
        env:
          PROD_ENV: ${{ secrets.CLIENT_ENV }}
        run: |
          echo "$PROD_ENV" > .env
      # Step 3: Install dependencies for both frontend and backend
      - name: Install dependencies
        run: |
          npm i  -g pnpm 
          pnpm i 
          pnpm build
      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          overwrite: true
          source: .next,public,.gitignore,components.json,eslint.config.mjs,next.config.ts,package.json,pnpm-lock.yaml,pm2.config.js,postcss.config.mjs,tailwind.config.ts,tsconfig.json,README.md,prisma
          target: "/var/www/transcriptor-admin"


      - name: Run scripts on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd /var/www/transcriptor-admin
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            export PATH="$PATH:$HOME/.nvm/versions/node/v22.17.0/bin"
            pnpm i
            pm2 reload pm2.config.js